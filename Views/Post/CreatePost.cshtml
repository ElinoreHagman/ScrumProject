@model ScrumProject.Models.Post


@{
    ViewBag.Title = "CreatePost";
}
    <div class="jumbotron">


        @using (Html.BeginForm("CreatePost", "Post", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <br />

            <h2>Write new post</h2>

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="margin-bottom: 5px;">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">

                @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-10">
                    <select id="dropdownMenu" name="dropdownMenu" class="form-control" style="margin-bottom: 5px;">
                        <option value="0">Choose category</option>
                        @foreach (var category in (ViewBag.categories as List<ScrumProject.Models.Category>))
                        {
                            <option value="@category.Name">@category.Name</option>
                        }
                    </select>
                </div>

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FilePath, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FilePath, new { htmlAttributes = new { @class = "form-control", @type = "file" } })
                    @Html.ValidationMessageFor(model => model.FilePath, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10 text-success">
                    @ViewBag.FileStatus
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PublishedWall, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.RadioButtonFor(model => model.PublishedWall, "Formell")
                    @Html.Label("Formell")
                    <br />
                    @Html.RadioButtonFor(model => model.PublishedWall, "Informell")
                    @Html.Label("Informell")

                    @Html.ValidationMessageFor(model => model.PublishedWall, "", new { @class = "text-danger" })
                </div>
            </div>




            @*<div class="form-group">
                @Html.LabelFor(model => model.PostDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PostDateTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PostDateTime, "", new { @class = "text-danger" })
                </div>
            </div>*@

            @*<div class="form-group">
                @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CategoryID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                </div>
            </div>*@

            @*<div class="form-group">
                @Html.LabelFor(model => model.ProfileID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProfileID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProfileID, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">

                <input type="submit" value="Post" class="btn btn-primary" />

            </div>

        }
    </div>

